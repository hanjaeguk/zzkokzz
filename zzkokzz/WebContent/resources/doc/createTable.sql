-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- BOARD Table Create SQL
CREATE TABLE BOARD
(
    SEQ            NUMBER           NOT NULL, 
    ID             VARCHAR2(20)     NULL, 
    SUBJECT        VARCHAR2(100)    NULL, 
    CONTENT        CLOB             NULL, 
    HIT            NUMBER           NULL, 
    LOGTIME        DATE             NULL, 
    UPDATETIME     DATE             NULL, 
    RECOMMCOUNT    NUMBER           NULL, 
    WISHCOUNT      NUMBER           NULL, 
    SSEQ           NUMBER           NULL, 
    STEP           NUMBER           NULL, 
    TRIPDAY        NUMBER           NULL, 
    BCODE          NUMBER           NULL, 
    CONSTRAINT BOARD_PK PRIMARY KEY (SEQ)
)
/

CREATE SEQUENCE BOARD_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOARD_AI_TRG
BEFORE INSERT ON BOARD 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_SEQ.NEXTVAL
    INTO: NEW.SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_AI_TRG;
/

--DROP SEQUENCE BOARD_SEQ;
/

COMMENT ON TABLE BOARD IS '게시판'
/

COMMENT ON COLUMN BOARD.SEQ IS '글번호'
/

COMMENT ON COLUMN BOARD.ID IS '작성자아이디'
/

COMMENT ON COLUMN BOARD.SUBJECT IS '제목'
/

COMMENT ON COLUMN BOARD.CONTENT IS '내용'
/

COMMENT ON COLUMN BOARD.HIT IS '조회수'
/

COMMENT ON COLUMN BOARD.LOGTIME IS '작성일자'
/

COMMENT ON COLUMN BOARD.UPDATETIME IS '수정일자'
/

COMMENT ON COLUMN BOARD.RECOMMCOUNT IS '추천'
/

COMMENT ON COLUMN BOARD.WISHCOUNT IS '찜갯수'
/

COMMENT ON COLUMN BOARD.SSEQ IS '여행일정게시판번호'
/

COMMENT ON COLUMN BOARD.STEP IS '정렬'
/

COMMENT ON COLUMN BOARD.TRIPDAY IS '여행일차수'
/

COMMENT ON COLUMN BOARD.BCODE IS '게시판번호'
/


-- MEMBER Table Create SQL
CREATE TABLE MEMBER
(
    ID           VARCHAR2(20)    NOT NULL, 
    NAME         VARCHAR2(20)    NULL, 
    EMAIL        VARCHAR2(50)    NULL, 
    PASS         VARCHAR2(20)    NULL, 
    JOINDATE     DATE            NULL, 
    ADMINCODE    NUMBER(1)       NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (ID)
)
/

COMMENT ON TABLE MEMBER IS '회원'
/

COMMENT ON COLUMN MEMBER.ID IS '아이디'
/

COMMENT ON COLUMN MEMBER.NAME IS '이름'
/

COMMENT ON COLUMN MEMBER.EMAIL IS '이메일'
/

COMMENT ON COLUMN MEMBER.PASS IS '비밀번호'
/

COMMENT ON COLUMN MEMBER.JOINDATE IS '회원가입일'
/

COMMENT ON COLUMN MEMBER.ADMINCODE IS '등급코드'
/


-- CATEGORT Table Create SQL
CREATE TABLE CATEGORT
(
    CCODE    NUMBER           NOT NULL, 
    CNAME    VARCHAR2(100)    NULL, 
    CONSTRAINT CATEGORT_PK PRIMARY KEY (CCODE)
)
/

CREATE SEQUENCE CATEGORT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CATEGORT_AI_TRG
BEFORE INSERT ON CATEGORT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CATEGORT_SEQ.NEXTVAL
    INTO: NEW.CCODE
    FROM DUAL;
END;
/

--DROP TRIGGER CATEGORT_AI_TRG;
/

--DROP SEQUENCE CATEGORT_SEQ;
/

COMMENT ON TABLE CATEGORT IS '카테고리'
/

COMMENT ON COLUMN CATEGORT.CCODE IS '카테고리번호'
/

COMMENT ON COLUMN CATEGORT.CNAME IS '카테고리이름'
/


-- BOARD_TYPE Table Create SQL
CREATE TABLE BOARD_TYPE
(
    BTYPE        NUMBER           NOT NULL, 
    BTYPENAME    VARCHAR2(100)    NULL, 
    CONSTRAINT BOARD_TYPE_PK PRIMARY KEY (BTYPE)
)
/

CREATE SEQUENCE BOARD_TYPE_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOARD_TYPE_AI_TRG
BEFORE INSERT ON BOARD_TYPE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_TYPE_SEQ.NEXTVAL
    INTO: NEW.BTYPE
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_TYPE_AI_TRG;
/

--DROP SEQUENCE BOARD_TYPE_SEQ;
/

COMMENT ON TABLE BOARD_TYPE IS '게시판형식'
/

COMMENT ON COLUMN BOARD_TYPE.BTYPE IS '게시판형식번호'
/

COMMENT ON COLUMN BOARD_TYPE.BTYPENAME IS '게시판형식이름'
/


-- BOARD_LIST Table Create SQL
CREATE TABLE BOARD_LIST
(
    BCODE    NUMBER           NOT NULL, 
    BNAME    VARCHAR2(100)    NULL, 
    BTYPE    NUMBER           NULL, 
    CCODE    NUMBER           NULL, 
    CONSTRAINT BOARD_LIST_PK PRIMARY KEY (BCODE)
)
/

CREATE SEQUENCE BOARD_LIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOARD_LIST_AI_TRG
BEFORE INSERT ON BOARD_LIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_LIST_SEQ.NEXTVAL
    INTO: NEW.BCODE
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_LIST_AI_TRG;
/

--DROP SEQUENCE BOARD_LIST_SEQ;
/

COMMENT ON TABLE BOARD_LIST IS '게시판리스트'
/

COMMENT ON COLUMN BOARD_LIST.BCODE IS '게시판번호'
/

COMMENT ON COLUMN BOARD_LIST.BNAME IS '게시판이름'
/

COMMENT ON COLUMN BOARD_LIST.BTYPE IS '게시판형식번호'
/

COMMENT ON COLUMN BOARD_LIST.CCODE IS '카테고리번호'
/

ALTER TABLE BOARD_LIST
    ADD CONSTRAINT FK_BOARD_LIST_CCODE_CATEGORT_C FOREIGN KEY (CCODE)
        REFERENCES CATEGORT (CCODE)
/

ALTER TABLE BOARD_LIST
    ADD CONSTRAINT FK_BOARD_LIST_BTYPE_BOARD_TYPE FOREIGN KEY (BTYPE)
        REFERENCES BOARD_TYPE (BTYPE)
/


-- MEMO Table Create SQL
CREATE TABLE MEMO
(
    MSEQ        NUMBER           NOT NULL, 
    SEQ         NUMBER           NULL, 
    ID          VARCHAR2(20)     NULL, 
    NAME        VARCHAR2(20)     NULL, 
    MCONTENT    VARCHAR2(500)    NULL, 
    MLOGTIME    DATE             NULL, 
    CONSTRAINT MEMO_PK PRIMARY KEY (MSEQ)
)
/

CREATE SEQUENCE MEMO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MEMO_AI_TRG
BEFORE INSERT ON MEMO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MEMO_SEQ.NEXTVAL
    INTO: NEW.MSEQ
    FROM DUAL;
END;
/

--DROP TRIGGER MEMO_AI_TRG;
/

--DROP SEQUENCE MEMO_SEQ;
/

COMMENT ON TABLE MEMO IS '댓글'
/

COMMENT ON COLUMN MEMO.MSEQ IS '댓글번호'
/

COMMENT ON COLUMN MEMO.SEQ IS '글번호'
/

COMMENT ON COLUMN MEMO.ID IS '작성자아이디'
/

COMMENT ON COLUMN MEMO.NAME IS '작성자이름'
/

COMMENT ON COLUMN MEMO.MCONTENT IS '댓글내용'
/

COMMENT ON COLUMN MEMO.MLOGTIME IS '댓글작성일'
/

ALTER TABLE MEMO
    ADD CONSTRAINT FK_MEMO_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/


-- SHEDULE Table Create SQL
CREATE TABLE SHEDULE
(
    SSEQ             NUMBER           NOT NULL, 
    STARTDATE        DATE             NULL, 
    ENDDATE          DATE             NULL, 
    ORIGINPICTURE    VARCHAR2(200)    NULL, 
    SAVEFOLDER       VARCHAR2(200)    NULL, 
    SAVEPICTURE      VARCHAR2(200)    NULL, 
    SEQ              NUMBER           NULL, 
    CONSTRAINT SHEDULE_PK PRIMARY KEY (SSEQ)
)
/

CREATE SEQUENCE SHEDULE_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SHEDULE_AI_TRG
BEFORE INSERT ON SHEDULE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SHEDULE_SEQ.NEXTVAL
    INTO: NEW.SSEQ
    FROM DUAL;
END;
/

--DROP TRIGGER SHEDULE_AI_TRG;
/

--DROP SEQUENCE SHEDULE_SEQ;
/

COMMENT ON TABLE SHEDULE IS '여행일정게시판'
/

COMMENT ON COLUMN SHEDULE.SSEQ IS '여행일정게시판번호'
/

COMMENT ON COLUMN SHEDULE.STARTDATE IS '시작날짜'
/

COMMENT ON COLUMN SHEDULE.ENDDATE IS '끝날짜'
/

COMMENT ON COLUMN SHEDULE.ORIGINPICTURE IS '원래사진'
/

COMMENT ON COLUMN SHEDULE.SAVEFOLDER IS '저장폴더'
/

COMMENT ON COLUMN SHEDULE.SAVEPICTURE IS '저장사진'
/

COMMENT ON COLUMN SHEDULE.SEQ IS '글번호'
/

ALTER TABLE SHEDULE
    ADD CONSTRAINT FK_SHEDULE_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/


-- TAG Table Create SQL
CREATE TABLE TAG
(
    TSEQ        NUMBER          NOT NULL, 
    TNAME       VARCHAR2(40)    NULL, 
    TCONTENT    VARCHAR2(40)    NULL, 
    SEQ         NUMBER          NULL, 
    CONSTRAINT TAG_PK PRIMARY KEY (TSEQ)
)
/

CREATE SEQUENCE TAG_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TAG_AI_TRG
BEFORE INSERT ON TAG 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TAG_SEQ.NEXTVAL
    INTO: NEW.TSEQ
    FROM DUAL;
END;
/

--DROP TRIGGER TAG_AI_TRG;
/

--DROP SEQUENCE TAG_SEQ;
/

COMMENT ON TABLE TAG IS '테그'
/

COMMENT ON COLUMN TAG.TSEQ IS '테그번호'
/

COMMENT ON COLUMN TAG.TNAME IS '테그이름'
/

COMMENT ON COLUMN TAG.TCONTENT IS '테그내용'
/

COMMENT ON COLUMN TAG.SEQ IS '글번호'
/

ALTER TABLE TAG
    ADD CONSTRAINT FK_TAG_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/


-- WISH Table Create SQL
CREATE TABLE WISH
(
    WSEQ    NUMBER          NOT NULL, 
    SEQ     NUMBER          NULL, 
    ID      VARCHAR2(20)    NULL, 
    CONSTRAINT WISH_PK PRIMARY KEY (WSEQ)
)
/

CREATE SEQUENCE WISH_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER WISH_AI_TRG
BEFORE INSERT ON WISH 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT WISH_SEQ.NEXTVAL
    INTO: NEW.WSEQ
    FROM DUAL;
END;
/

--DROP TRIGGER WISH_AI_TRG;
/

--DROP SEQUENCE WISH_SEQ;
/

COMMENT ON TABLE WISH IS '찜'
/

COMMENT ON COLUMN WISH.WSEQ IS '찜번호'
/

COMMENT ON COLUMN WISH.SEQ IS '글번호'
/

COMMENT ON COLUMN WISH.ID IS '아이디'
/

ALTER TABLE WISH
    ADD CONSTRAINT FK_WISH_ID_MEMBER_ID FOREIGN KEY (ID)
        REFERENCES MEMBER (ID)
/

ALTER TABLE WISH
    ADD CONSTRAINT FK_WISH_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/


-- RECOMMEND Table Create SQL
CREATE TABLE RECOMMEND
(
    RSEQ    NUMBER          NOT NULL, 
    SEQ     NUMBER          NULL, 
    ID      VARCHAR2(20)    NULL, 
    CONSTRAINT RECOMMEND_PK PRIMARY KEY (RSEQ)
)
/

CREATE SEQUENCE RECOMMEND_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER RECOMMEND_AI_TRG
BEFORE INSERT ON RECOMMEND 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT RECOMMEND_SEQ.NEXTVAL
    INTO: NEW.RSEQ
    FROM DUAL;
END;
/

--DROP TRIGGER RECOMMEND_AI_TRG;
/

--DROP SEQUENCE RECOMMEND_SEQ;
/

COMMENT ON TABLE RECOMMEND IS '추천'
/

COMMENT ON COLUMN RECOMMEND.RSEQ IS '추천번호'
/

COMMENT ON COLUMN RECOMMEND.SEQ IS '글번호'
/

COMMENT ON COLUMN RECOMMEND.ID IS '아이디'
/

ALTER TABLE RECOMMEND
    ADD CONSTRAINT FK_RECOMMEND_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/

ALTER TABLE RECOMMEND
    ADD CONSTRAINT FK_RECOMMEND_ID_MEMBER_ID FOREIGN KEY (ID)
        REFERENCES MEMBER (ID)
/


-- LOCATION Table Create SQL
CREATE TABLE LOCATION
(
    LOCATION    VARCHAR2(100)    NULL, 
    X           VARCHAR2(100)    NULL, 
    Y           VARCHAR2(100)    NULL, 
    ADDRESS     VARCHAR2(200)    NULL, 
    SEQ         NUMBER           NULL   
)
/

COMMENT ON TABLE LOCATION IS '장소'
/

COMMENT ON COLUMN LOCATION.LOCATION IS '장소'
/

COMMENT ON COLUMN LOCATION.X IS '위도'
/

COMMENT ON COLUMN LOCATION.Y IS '경도'
/

COMMENT ON COLUMN LOCATION.ADDRESS IS '주소'
/

COMMENT ON COLUMN LOCATION.SEQ IS '글번호'
/

ALTER TABLE LOCATION
    ADD CONSTRAINT FK_LOCATION_SEQ_BOARD_SEQ FOREIGN KEY (SEQ)
        REFERENCES BOARD (SEQ)
/


